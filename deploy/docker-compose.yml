version: '3.7'
services:

  redis:
    image: redis:alpine
  
  db:
    image: mysql:5.7
    volumes:
    - type: bind
      source: /mprove_data/db/mysql
      target: /var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
    ports:
    - '3305:3306'
  
  blockml:
    build: ../blockml/  
    image: mprove/blockml
    environment:
      BLOCKML_PORT: $BLOCKML_PORT
      BLOCKML_BASE_PATH: $BLOCKML_BASE_PATH    
    depends_on:
    - wait-for-redis

  backend:
    build: ../backend/  
    image: mprove/backend
    environment:
      BACKEND_PORT: $BACKEND_PORT
      BACKEND_JWT_SECRET: $BACKEND_JWT_SECRET
      BACKEND_DB_PASSWORD_DEV: $BACKEND_DB_PASSWORD_DEV
      BACKEND_MAILGUN_ACTIVE_API_KEY: $BACKEND_MAILGUN_ACTIVE_API_KEY
      BACKEND_MAILGUN_DOMAIN: $BACKEND_MAILGUN_DOMAIN
      BACKEND_SEND_EMAIL_FROM: $BACKEND_SEND_EMAIL_FROM      
    volumes:
    - type: bind
      source: /mprove_data/backend
      target: /mprove_data/backend
    depends_on:
    - wait-for-db     
    - wait-for-blockml     
  
  client:
    build: 
      context: ../client/
      dockerfile: docker.local.Dockerfile
    image: mprove/client    
  
  proxy:
    build: 
      context: ../proxy/
      dockerfile: docker.local.Dockerfile  
    image: mprove/proxy
    depends_on:
    - backend
    - client
    ports:
    - '80:80'    
    - '8080:80' # browser client app communicates with backend through 8080  

  wait-for-redis:
    build: ../wait/
    image: mprove/wait
    command: ["redis:6379", "-t", "0", "--", "echo", wait-for-redis-done;'] 
  
  wait-for-db:
    build: ../wait/
    image: mprove/wait
    command: ["db:3306", "-t", "0", "--", "echo", wait-for-db-done;'] 
  
  wait-for-blockml:
    build: ../wait/
    image: mprove/wait
    command: ["blockml:8081", "-t", "0", "--", "echo", wait-for-blockml-done;'] 
   
